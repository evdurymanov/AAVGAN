ARG CUDA=11.1
FROM nvidia/cuda:${CUDA}-cudnn8-runtime-ubuntu18.04
ARG CUDA

# Use bash to support string substitution.
SHELL ["/bin/bash", "-c"]

# https://github.com/NVIDIA/nvidia-docker/issues/1631#issuecomment-1112682423
RUN rm /etc/apt/sources.list.d/cuda.list
RUN rm /etc/apt/sources.list.d/nvidia-ml.list
RUN apt-key del 7fa2af80
RUN apt-get update && apt-get install -y --no-install-recommends wget
RUN wget -P /tmp \
    "https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-keyring_1.0-1_all.deb" \
    && dpkg -i /tmp/cuda-keyring_1.0-1_all.deb \
    && rm /tmp/cuda-keyring_1.0-1_all.deb




RUN apt-get update && apt-get install -y \
    build-essential \
    cuda-command-line-tools-${CUDA/./-} \
    wget \
    cuda-minimal-build-${CUDA/./-} \
    git \
    tmux

RUN wget -P /tmp \
    "https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh" \
    && bash /tmp/Miniconda3-latest-Linux-x86_64.sh -b -p /opt/conda \
    && rm /tmp/Miniconda3-latest-Linux-x86_64.sh
ENV PATH /opt/conda/bin:$PATH

COPY environment_docker.yml aavgan/environment_docker.yml

# installing into the base environment since the docker
# container wont do anything other than run openfold
SHELL ["conda", "run", "-n", "base", "/bin/bash", "-c"]

# update conda
RUN conda update -n base -c defaults conda
